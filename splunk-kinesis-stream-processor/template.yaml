AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >
    Serverless application to stream events from AWS Kinesis to Splunk HTTP Event Collector (HEC).

    This SAM template creates the Lambda function with its IAM execution role, a subscription to Kinesis stream
    along with a Lambda permission to grant Kinesis Stream permission
    to invoke this function. Kinesis Stream must be in same region as the region where this stack is created.

    Last Modified: 12 Oct, 2017
    Authors: Roy Arsan <roy@splunk.com>, Bill Bartlett <bbartlett@splunk.com>, Tarik Makota <tmak@amazon.com>

Parameters:
    KinesisStreamName: 
      Type: "String"
      Description: "Name of a Kinesis stream (must be in the same region). The Lambda function will be invoked whenever this stream is updated."
    
    KinesisStreamBatchSize: 
      Type: "Number"
      Description: "The largest number of records that AWS Lambda will retrieve from your stream at the time of invoking your function. Your function receives an event with all the retrieved records."
      Default: "100"

    KinesisStreamStartingPosition:
      Type: "String"
      Description: "The position in the stream where AWS Lambda should start reading. For more information, see ShardIteratorType in the Amazon Kinesis API Reference."
      AllowedValues: ["AT_TIMESTAMP", "TRIM_HORIZON", "LATEST"]
      Default: "LATEST" 

    SplunkHttpEventCollectorURL:
      Type: "String"
      Description: "URL address of your Splunk HTTP event collector endpoint"

    SplunkHttpEventCollectorToken:
      Type: "String"
      Description: "Token of your Splunk HTTP event collector endpoint"
      
Outputs:
    SplunkKinesisStreamProcessor:
      Description: "Splunk Kinesis Stream Lambda Function ARN"
      Value: !GetAtt SplunkKinesisStreamProcessor.Arn

Resources:
    KinesisStreamSubscriptionFilter:
      Type: "AWS::Lambda::EventSourceMapping"
      Properties: 
        BatchSize: !Ref KinesisStreamBatchSize
        Enabled: true
        EventSourceArn: !Join [ "", [ "arn:", !Ref "AWS::Partition", ":kinesis:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":stream/", !Ref KinesisStreamName ] ]
        FunctionName: !GetAtt SplunkKinesisStreamProcessor.Arn
        StartingPosition: !Ref KinesisStreamStartingPosition

    SplunkKinesisStreamProcessorFunctionIAMRole:
      Type: "AWS::IAM::Role"
      Properties:
          Path: "/"
          ManagedPolicyArns:
              - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          Policies: 
          - 
            PolicyName: "SplunkKinesisStream"
            PolicyDocument: 
              Version: "2012-10-17"
              Statement: 
              - 
                Effect: "Allow"
                Action: 
                - kinesis:DescribeStream
                - kinesis:GetRecords
                - kinesis:GetShardIterator
                - kinesis:ListStreams 
                Resource: 
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":kinesis:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":stream/", !Ref KinesisStreamName ] ]
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: "AllowLambdaServiceToAssumeRole"
                Effect: "Allow"
                Action: 
                  - "sts:AssumeRole"
                Principal:
                  Service: 
                    - "lambda.amazonaws.com"

    SplunkKinesisStreamProcessor:
      Type: 'AWS::Serverless::Function'
      Properties:
        Handler: index.handler
        Runtime: nodejs6.10
        CodeUri: ./splunk-kinesis-stream-processor.zip
        Role: !GetAtt SplunkKinesisStreamProcessorFunctionIAMRole.Arn
        Description: Stream events from AWS Kinesis Stream to Splunk HTTP event collector
        MemorySize: 512
        Timeout: 10
        Environment:
          Variables:
            SPLUNK_HEC_URL: !Ref SplunkHttpEventCollectorURL
            SPLUNK_HEC_TOKEN: !Ref SplunkHttpEventCollectorToken

  